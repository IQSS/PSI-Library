% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DP-histogram.R
\name{histogram.release}
\alias{histogram.release}
\title{Release differentially private histogram}
\usage{
histogram.release(x, var.type, n, epsilon, rng = NULL, bins = NULL,
  n.bins = NULL)
}
\arguments{
\item{x}{Vector, numeric or categorical}

\item{var.type}{String, specifies the type of x}

\item{n}{Integer, number of observations in x}

\item{epsilon}{Float, Epsilon value for differential privacy}

\item{rng}{Tuple, range of x, required for numeric types}

\item{bins}{Vector of bins for which values are counted, required for categorical types}

\item{n.bins}{Integer, Number of cells in which to tabulate values in x, ignored if \code{var.type \%in\% c('factor', 'categorical')}}
}
\value{
something here

If the variable is categorical, bins are assumed to be provided by the depositor, and these bin values
used to construct the table. The vector is pre-processed so that observed levels not specified in these
bins are recoded to `NA`. Thus, any observed levels not specified in the `bins` argument show up as `NA`
in the output table.

If the variable is numeric, the number of bins `n_bins` is set by the user optionally, else the Sturges
method is used to select the number of bins given the number of observations `n`. The bins are then
constructed to be equal intervals between the provided range.

Uses the Laplace mechanism. If the stability mechanism improves accuracy, its value is used.
}
\description{
Release differentially private histogram
}
\examples{
# numeric types
x_num <- rnorm(100)
x_num_na <- x_num
x_num_na[sample(1:length(x_num_na), size=10, replace=FALSE)] <- NA
x_int <- as.integer(round(x_num * 20))
r_num <- histogram.release(x_num, var.type='numeric', rng=c(-2, 2), n=100, epsilon=0.1)
r_num_na <- histogram.release(x_num_na, var.type='numeric', rng=c(-2, 2), n=100, epsilon=0.1)
r_int <- histogram.release(x_int, var.type='integer', rng=c(-40, 40), n=100, epsilon=0.1)
r_num_random <- histogram.release(x_num, var.type='numeric', rng=c(-2, 2), n=100, epsilon=0.1, mechanism='random')
# accuracy is returning inf, which filters the entire release for stability histogram
r_num_stability <- histogram.release(x_num, var.type='numeric', rng=c(-2, 2), n=100, epsilon=0.1, mechanism='stability')
r_num_noisy <- histogram.release(x_num, var.type='numeric', rng=c(-2, 2), n=100, epsilon=0.1, mechanism='noisy')

# categorical types
x_char <- c(rep('a', 40), rep('b', 25), rep('c', 15), rep('d', 12), rep('e', 5), rep('f', 2), rep('g', 1))
x_fac <- factor(x_char)
bins <- c('a', 'b', 'c', 'd', 'e')
r_char <- histogram.release(x_char, var.type='character', n=100, epsilon=0.1, bins=bins)
r_fac <- histogram.release(x_fac, var.type='factor', n=100, epsilon=0.1, bins=bins)
}
